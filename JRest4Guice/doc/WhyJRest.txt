目标:
     一个轻量级的Restful服务架构
特点:
     1. 基于GUICE
     2. 零配置式服务声明
          @Restful(uri = "/contacts")
          public class ContactListRestService
     3. 服务的自动扫描注册
     
     4. 非侵入式风格，用户不需要实现特定的接口来实现Restful服务
          用户只要在指定的POJO上:
          1. 声明为@Restful，并指明访问的URI格式
          2. 在指定的方法上声明为@HttpMethod
     5. 支持Rest的Post. Get. Put. Delete操作
          用户在指定的方法上通过@HttpMethod注解来声明方法的类型，如下:
          @HttpMethod(type = HttpMethodType.POST)
          public String createContact(String name, @RequestParameter("homePhone") String homePhone, @ModelBean Contact contact)
          @HttpMethod
          public String getContact(@FirstResult int first, @MaxResults int max)
          注:如果没有提供HttpMethodType类型的声明，系统会自动根据方法名称的前缀来自动识别（方法名必须以get/post/put/delete开头）
     6. 灵活的注入
          6.1. 支持HttpServletRequest. HttpServletResponse. ModelMap的注入
               @Inject
               private ModelMap modelMap;
               @Inject
               private HttpServletRequest request;
               @Inject
               private HttpServletResponse response;
          6.2. 支持参数的自动注入
               方法中的参数可以由系统自动注入，如下:
               public String createContact(String name, @RequestParameter("homePhone") String homePhone, @ModelBean Contact contact)
               注:如果参数没有任何注解，系统默认获取上下文ID为参数名称的参数值，否则通过@RequestParameter注解指定的参数名称来获取，@ModelBean可以将上下文
               中的参数转换成指定参数类型的Java bean
          6.3. 支持对JndiResource的注入          